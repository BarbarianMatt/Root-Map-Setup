{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{UYdf:function(t,e,r){\"use strict\";r.r(e),r.d(e,\"InputModule\",function(){return P});var n=r(\"ofXK\"),o=r(\"tyNb\"),l=r(\"6xEa\"),i=r(\"fXoL\"),a=r(\"UPMW\"),c=r(\"BJvs\"),s=r(\"HDMR\");function g(t,e){return d(t).slice(0,e)}function h(t,e){return t+e+\"\\r\\n\"}function d(t){return null==t&&console.trace(),t.map(t=>({value:t,sort:Math.random()})).sort((t,e)=>t.sort-e.sort).map(({value:t})=>t)}function u(t,e){return Array.from({length:e},(e,r)=>r+t)}function b(t,e,r,n){var o=c.l[n][e];return!(r.includes(e)||\"t\"!=t&&r.some(t=>o.adjacent.includes(t))||\"t\"==t&&!o.ruins||\"t_m\"==t&&(1!=o.slots||o.ruins)||\"t_c\"==t&&!o.river||\"t_f\"==t&&!o.river||!(\"t_r\"!=t||!o.edge&&o.adjacent.length>2))}function f(t,e){for(var r=[\"\\u1ea0\",\"\\xc5\",\"\\xc4\",\"\\u1ea2\",\"\\u1e00\",\"\\u1ea4\",\"\\u1ea6\",\"\\u1ea8\",\"\\u0202\"],n=[],o=JSON.parse(JSON.stringify(t)),l=0;l<Math.max(e+1,3);l++){var i=g(o,1)[0];if(n.push(i),o.splice(o.indexOf(i),1),\"V\"==i){o.push(\"G\");var a=g(r,1)[0];n.push(a),r.splice(r.indexOf(a),1)}else\"G\"==i&&(a=g(r,1)[0],n.push(a),r.splice(r.indexOf(a),1))}return n}function p(t,e){t.includes(e)&&t.splice(t.indexOf(e),1)}let m=(()=>{class t{constructor(t){this.rootlogService=t}mapSetup(t,e,r,n){var o=\"\";const l=g([a.RootMap.Fall,a.RootMap.Winter,a.RootMap.Lake,a.RootMap.Mountain],1)[0];o=h(o,\"Map: \"+l);var i=Math.random()<=.9?\"E&P\":\"Standard\";o=h(o,\"Deck: \"+i);var s=[\"R\",\"R\",\"R\",\"R\",\"F\",\"F\",\"F\",\"F\",\"M\",\"M\",\"M\",\"M\"];s=d(s);for(var m=!0;n&&m;){s=d(s),m=!1;for(var v=0;v<s.length;v++){var S=c.l[l][v+1].adjacent;if(l==a.RootMap.Mountain&&(S=S.concat(c.l[l][v+1].closedAdjacent)),S.some(t=>s[t-1]==s[v])){m=!0;break}}}var M=\"Clearings: \"+s[0]+\"1\";for(v=1;v<s.length;v++)M+=\", \"+s[v]+(v+1).toString();o=h(o,M);var O=\"\";o=h(o,\"M: \"+i+\" Deck\");var w=g([\"t\",\"t_m\",\"t_c\",\"t_f\",\"t_k\",\"t_r\"],Math.round(Math.max(Math.min(function(t,e){const{z0:r}=function(){const t=Math.random(),e=Math.random();return{z0:Math.sqrt(-2*Math.log(t))*Math.cos(2*Math.PI*e),z1:Math.sqrt(-2*Math.log(t))*Math.sin(2*Math.PI*e)}}();return.557*r+1.1}(),2),0))),j=Math.random();(\"Mountain\"==l&&j<.4&&!w.includes(\"t\")||\"Lake\"==l&&j<.4&&!w.includes(\"t_f\"))&&(w[0]=\"Mountain\"==l?\"t\":\"t_f\");for(var _=!1,y=[],C=0;!_&&C<=1e5;){y=[],_=!0,w=d(w);var R=g(u(1,12),w.length);for(v=0;v<w.length;v++){var k=R[v];j=Math.random(),\"Mountain\"==l&&j<.2&&(k=10),b(w[v],k,y,l)||(_=!1),y.push(k)}C+=1}C>=1e5&&console.log(\"looped too much\");var N=u(1,12).filter(t=>c.l[l][t].ruins),I=[\"b\",\"b_s\",\"b_w\",\"b_r\"],P=\"M:\";if(N.length>0)for(P+=I[0]+\"->\"+N[0]+\"/\",v=1;v<N.length;v++)P+=I[v]+\"->\"+N[v]+\"/\";if(w.length>0){for(v=0;v<y.length;v++)P+=w[v]+\"->\"+y[v].toString()+\"/\",\"t_c\"==w[v]?s[y[v]-1]=s[y[v]-1]+\"FRM\".replace(s[y[v]-1],\"\"):\"t_r\"==w[v]?c.l[l][y[v]].slots=c.l[l][y[v]].slots+1:\"t_k\"==w[v]&&(s[y[v]-1].includes(\"F\")&&(P+=\"Z%s/Z%s/Z%x/Z%h/\"),s[y[v]-1].includes(\"R\")&&(P+=\"Z%b/Z%b/Z%t/Z%t/\"),s[y[v]-1].includes(\"M\")&&(P+=\"Z%f/Z%f/Z%c/Z%c/\"));O=h(O,P=P.slice(0,-1))}var F=[\"P\",\"L\",\"D\",\"E\",\"C\",\"O\",\"V\",\"A\",\"K\",\"H\"],x=[\"c\",\"e\",\"a\",\"v\",\"p\",\"d\",\"o\",\"l\"],U=[\"\\xe5\",\"\\u1ea3\",\"\\u1ea5\",\"\\u1ea7\",\"\\u1ea9\",\"\\u0203\"],L=g(x,e);for(L.push(\"c\"),v=0;v<L.length;v++)p(F,L[v].toUpperCase()),\"v\"==L[v]&&L.splice(v+1,0,g(U,1)[0]),P=L[v]+\": \"+this.rootlogService.getFactionProperName(L[v]),x.includes(L[v])&&(P+=\" (\"+g(c.i[L[v].toUpperCase()],1)+\")\"),o=h(o,P);var V=u(1,12).filter(t=>c.l[l][t].corner),D=0;if(L.includes(\"c\")){var G=d([\"b_s\",\"b_r\",\"b_w\"]),Z=g(V,1)[0];for(V.splice(V.indexOf(Z),1),D=Z,P=\"c:t_k->\"+Z.toString()+\"/w->\"+Z.toString(),v=1;v<13;v++)c.l[l][Z].opposite!=v&&(P+=\"+\"+v.toString());var E=c.l[l][Z].adjacent;for(E.length<G.length&&(E=E.concat(Array(G.length-E.length).fill(Z))),v=0;v<G.length;v++)P+=\"/\"+G[v]+\"->\"+E[v].toString(),c.l[l][E[v]].slots=c.l[l][E[v]].slots-1;O=h(O,P)}if(L.includes(\"e\")&&(Z=3==V.length?c.l[l][u(1,12).filter(t=>c.l[l][t].corner&&!V.includes(t))[0]].opposite:g(V,1)[0],V.splice(V.indexOf(Z),1),c.l[l][Z].slots=c.l[l][Z].slots-1,O=h(O,\"e:b+6w->\"+Z.toString())),L.includes(\"v\")){var J=Object.keys(c.j[l]).reduce((t,e)=>t>(e.match(/\\_/g)||[]).length?t:(e.match(/\\_/g)||[]).length,0);O=h(O,\"v:p->\"+g(Object.keys(c.j[l]).filter(t=>(t.match(/\\_/g)||[]).length==J),1)[0].toString())}if(L.includes(\"l\")){for(Z=3==V.length?c.l[l][u(1,12).filter(t=>c.l[l][t].corner&&!V.includes(t))[0]].opposite:g(V,1)[0],V.splice(V.indexOf(Z),1),P=\"l:4w+b_\"+s[Z-1].toString()[0].toLowerCase()+\"->\"+Z.toString(),v=0;v<c.l[l][Z].adjacent.length;v++)P+=\"/w->\"+c.l[l][Z].adjacent[v].toString();c.l[l][Z].slots=c.l[l][Z].slots-1,O=h(O,P)}if(L.includes(\"o\")){for(P=\"o:w->\"+(W=u(1,12).filter(t=>c.l[l][t].river&&t!=D))[0],v=1;v<W.length;v++)P+=\"+\"+W[v];O=h(O,P)}if(L.includes(\"d\")){for(Z=3==V.length?c.l[l][u(1,12).filter(t=>c.l[l][t].corner&&!V.includes(t))[0]].opposite:g(V,1)[0],V.splice(V.indexOf(Z),1),P=\"d:t->\"+Z.toString()+\"/2w->\"+Z.toString(),v=0;v<c.l[l][Z].adjacent.length;v++)P+=\"+\"+c.l[l][Z].adjacent[v].toString();O=h(O,P)}L.includes(\"p\")&&(P=\"p:w->\",P+=u(1,12).filter(t=>s[t-1].includes(\"F\")&&t!=D).splice(-1)[0]+\"+\",P+=u(1,12).filter(t=>s[t-1].includes(\"M\")&&t!=D).splice(-1)[0]+\"+\",O=h(O,P+=u(1,12).filter(t=>s[t-1].includes(\"R\")&&t!=D).splice(-1)[0]));var K=g(F.concat([\"B\",\"N\",\"R\"]),r?3:0);for(K[0]=\"K\",v=0;v<K.length;v++){var z=K[v];F.includes(z)&&F.length-(\"V\"==z?2:1)<t+1&&(z=g([\"B\",\"N\",\"R\"].filter(t=>!K.includes(t)&&!K.includes(t+\"\\u0301\")),1)[0]),p(F,z),K[v]=Object(c.c)(z),o=h(o,K[v]+\": \"+this.rootlogService.getFactionProperName(K[v]).split(\",\")[v+t+e>4?1:0]+\" \"+(v+t+e>4?\"\\u25bc\":\"\\u25b2\"))}for(v=0;v<K.length&&v<5-t-e;v++){var B=K[v];if(B==Object(c.c)(\"K\")){var H=g(u(1,12).filter(t=>c.l[l][t].slots>0&&t!=D),1)[0];O=h(O,Object(c.c)(\"K\")+\":b+2w->\"+H.toString()),c.l[l][H].slots=c.l[l][H].slots-1}if(B==Object(c.c)(\"B\")&&(R=g(u(1,12).filter(t=>t!=D),2),O=h(O,Object(c.c)(\"B\")+\":w->\"+R[0].toString()+\"+\"+R[1].toString())),B==Object(c.c)(\"N\")){if(P=\"\",(R=g(Object.keys(c.m[l]),2)).length>0){P+=Object(c.c)(\"N\")+\":w->\"+R[0];for(var q=1;q<R.length;q++)P+=\"+\"+R[q]}O=h(O,P)}if(B==Object(c.c)(\"P\")){var A=g([\"R\",\"F\",\"M\"],1)[0];R=g(u(1,12).filter(t=>s[t-1].includes(A)&&t!=D),2),O=h(O,Object(c.c)(\"P\")+\":w->\"+R[0].toString()+\"+\"+R[1].toString())}if(B==Object(c.c)(\"L\")){for(P=\"\",(W=u(1,12).filter(t=>c.l[l][t].ruins&&t!=D)).length>0&&(P+=Object(c.c)(\"L\")+\":w->\"+W[0]),q=1;q<W.length;q++)P+=\"+\"+W[q];O=h(O,P)}if(B==Object(c.c)(\"D\")&&(H=g(u(1,12).filter(t=>t!=D),1)[0],O=h(O,Object(c.c)(\"D\")+\":t+3w->\"+H.toString())),B==Object(c.c)(\"E\")&&(H=g(u(1,12).filter(t=>c.l[l][t].edge&&t!=D),1)[0],O=h(O,Object(c.c)(\"E\")+\":5w->\"+H.toString())),B==Object(c.c)(\"C\")){var W;if(P=\"\",(W=u(1,12).filter(t=>t!=D)).length>0)for(P+=Object(c.c)(\"C\")+\":w->\"+W[0],q=1;q<W.length;q++)P+=\"+\"+W[q];O=h(O,P)}if(B==Object(c.c)(\"R\")&&(H=g(u(1,12).filter(t=>t!=D),1)[0],O=h(O,Object(c.c)(\"R\")+\":w->\"+H.toString())),B==Object(c.c)(\"H\")){var T=g(u(1,12).filter(t=>t!=D),1)[0],X=g(u(1,12).filter(t=>t!=D),1)[0];O=h(O,Object(c.c)(\"H\")+\":w->\"+T.toString()+\"+\"+X.toString())}if(B==Object(c.c)(\"O\")&&(0==(R=g(u(1,12).filter(t=>c.l[l][t].edge&&c.l[l][t].river&&t!=D),1)).length&&(R=g(u(1,12).filter(t=>c.l[l][t].river&&t!=D),1)),H=R[0],O=h(O,Object(c.c)(\"O\")+\":w->\"+H.toString())),B==Object(c.c)(\"V\")&&(H=g(Object.keys(c.j[l]),1)[0],O=h(O,Object(c.c)(\"V\")+\":w->\"+H.toString())),B==Object(c.c)(\"A\")){var Y=g([\"R\",\"F\",\"M\"],1)[0],Q=g([\"R\",\"F\",\"M\"],1)[0];T=g(u(1,12).filter(t=>s[t-1].includes(Y)&&t!=D),1)[0],X=g(u(1,12).filter(t=>s[t-1].includes(Q)&&t!=D),1)[0],O=h(O,Object(c.c)(\"A\")+\":w->\"+T.toString()+\"+\"+X.toString())}}for(var $=[\"D\",\"E\",\"C\",\"K\",\"H\"],tt=!1,et=0,rt=$;!tt&&et<=1e5;)tt=!0,rt=f(F,t),((nt=$.filter(t=>rt.includes(t)||L.includes(t.toLowerCase())).length)<1||2==t&&nt<3)&&(tt=!1),et+=1;et>=1e5&&console.log(\"looped too much\");var nt=$.filter(t=>rt.includes(t)||L.includes(t.toLowerCase())).length;for(v=0;v<rt.length;v++){if(P=rt[v]+\": \"+this.rootlogService.getFactionProperName(rt[v]),(v==rt.length-1&&nt<=1&&!$.includes(rt[v])&&![\"\\u1ea0\",\"\\xc5\",\"\\xc4\",\"\\u1ea2\",\"\\u1e00\",\"\\u1ea4\",\"\\u1ea6\",\"\\u1ea8\",\"\\u0202\"].includes(rt[v])||v==rt.length-2&&nt<=1&&(\"V\"==rt[v]||\"G\"==rt[v]))&&(P+=\" \\ud83d\\udd12\"),\"K\"==rt[v]){var ot=Object.keys(c.j[l]),lt=\"\";if((R=g([\"t\",\"t\",\"t\",\"t\",\"t_k\",\"t_k\",\"t_k\",\"t_k\",\"t_m\",\"t_m\",\"t_m\",\"t_m\"],ot.length)).length>0)for(lt+=\"K:\"+R[0]+\"->\"+ot[0],q=1;q<R.length;q++)lt+=\"/\"+R[q]+\"->\"+ot[q];O=h(O,lt)}o=h(o,P)}return o+=O,(C>=1e5||et>=1e5)&&(o=\"error\"),o=\"Map: Winter\\r\\n\\r\\nDeck: Standard\\r\\n\\r\\nClearings: F1, M2, M3, M4, F5, R6, F7, R8, F9, R10, M11, R12\\r\\n\\r\\nM: Standard Deck\\r\\n\\r\\nc: Mechanical Marquise 2.0 (Iron will)\\r\\n\\r\\n\\u0113: Vault Keepers \\u25b2\\r\\n\\r\\n\\u0117: Riverfolk Flotilla \\u25b2\\r\\n\\r\\n\\u0110: Flame Bearers \\u25b2\\r\\n\\r\\nP: Corvid Conspiracy\\r\\n\\r\\nD: Underground Duchy\\r\\n\\r\\nV: Vagabond\\r\\n\\r\\n\\u1ea2: Ranger\\r\\n\\r\\nM:b->8/b_s->9/b_w->11/b_r->12/t_f->7/t_c->12\\r\\n\\r\\nc:t_k->2/w->2+1+2+3+5+6+7+8+9+10+11+12/b_r->6/b_s->7/b_w->12\\r\\n\\r\\n\\u0113:b+2w->12\\r\\n\\r\\n\\u0117:w->10\\r\\n\\r\\n\\u0110:w->1+4\\r\\n\",console.log(o),o}}return t.\\u0275fac=function(e){return new(e||t)(i.Sb(s.a))},t.\\u0275prov=i.Fb({token:t,factory:t.\\u0275fac,providedIn:\"root\"}),t})(),v=(()=>{class t{constructor(){}setItem(t,e){localStorage.setItem(t,e)}getItem(t){return localStorage.getItem(t)}removeItem(t){localStorage.removeItem(t)}clear(){localStorage.clear()}}return t.\\u0275fac=function(e){return new(e||t)},t.\\u0275prov=i.Fb({token:t,factory:t.\\u0275fac,providedIn:\"root\"}),t})();var S=r(\"/t3+\"),M=r(\"kmnG\"),O=r(\"qFsG\"),w=r(\"3Pt+\"),j=r(\"bSwM\"),_=r(\"bTqV\");const y=function(){return[\"/\"]},C=function(){return{standalone:!0}},R=function(){return[\"/full-game\"]},k=[{path:\"\",component:(()=>{class t{constructor(t,e,r){this.mapService=t,this.rootlogService=e,this.localStorageService=r,this.players=null==this.localStorageService.getItem(\"players\")?\"4\":this.localStorageService.getItem(\"players\"),this.bots=null==this.localStorageService.getItem(\"bots\")?\"0\":this.localStorageService.getItem(\"bots\"),this.hirelings=null!=this.localStorageService.getItem(\"hirelings\")&&JSON.parse(this.localStorageService.getItem(\"hirelings\").toLowerCase()),this.balanced=null!=this.localStorageService.getItem(\"balanced\")&&JSON.parse(this.localStorageService.getItem(\"balanced\").toLowerCase()),this.game=this.mapService.mapSetup(parseInt(this.players),parseInt(this.bots),this.hirelings,this.balanced),this.validRootlog=!0,this.gameUrl=\"\",this.validRootlogUrl=!1}gameChange(){this.localStorageService.setItem(\"players\",this.players),this.localStorageService.setItem(\"bots\",this.bots),this.localStorageService.setItem(\"hirelings\",this.hirelings),this.localStorageService.setItem(\"balanced\",this.balanced),this.game=this.mapService.mapSetup(parseInt(this.players),parseInt(this.bots),this.hirelings,this.balanced)}async gameUrlChange(){try{const t=await this.rootlogService.getGameStringFromURLPromise(this.gameUrl);this.validRootlogUrl=this.rootlogService.isValidGame(t)}catch(t){this.validRootlogUrl=!1}}getURLParams(){const t={};return this.game&&(t.game=this.getEncodedGame()),this.gameUrl&&(t.gameUrl=this.gameUrl),t}getEncodedGame(){return this.game?Object(l.compressToEncodedURIComponent)(this.game):\"\"}}return t.\\u0275fac=function(e){return new(e||t)(i.Jb(m),i.Jb(s.a),i.Jb(v))},t.\\u0275cmp=i.Db({type:t,selectors:[[\"app-input\"]],decls:26,vars:14,consts:[[\"color\",\"primary\",3,\"routerLink\"],[1,\"container\"],[1,\"row\"],[1,\"col\"],[\"appearance\",\"outline\",\"color\",\"accent\"],[\"matInput\",\"\",\"placeholder\",\"Enter # of players here...\",1,\"input-game\",3,\"ngModel\",\"ngModelOptions\",\"keyup\",\"ngModelChange\"],[\"matInput\",\"\",\"placeholder\",\"Enter # of bots here...\",1,\"input-game\",3,\"ngModel\",\"ngModelOptions\",\"keyup\",\"ngModelChange\"],[3,\"ngModel\",\"change\",\"ngModelChange\"],[\"mat-flat-button\",\"\",\"color\",\"primary\",3,\"routerLink\",\"queryParams\",\"disabled\"]],template:function(t,e){1&t&&(i.Ob(0,\"mat-toolbar\",0),i.Ob(1,\"span\"),i.sc(2,\"Rootvis\"),i.Nb(),i.Nb(),i.Ob(3,\"div\",1),i.Ob(4,\"div\",2),i.Ob(5,\"div\",3),i.Ob(6,\"mat-form-field\",4),i.Ob(7,\"mat-label\"),i.sc(8,\"Players\"),i.Nb(),i.Ob(9,\"textarea\",5),i.Vb(\"keyup\",function(){return e.gameChange()})(\"ngModelChange\",function(t){return e.players=t}),i.Nb(),i.Nb(),i.Nb(),i.Nb(),i.Ob(10,\"div\",2),i.Ob(11,\"div\",3),i.Ob(12,\"mat-form-field\",4),i.Ob(13,\"mat-label\"),i.sc(14,\"Bots\"),i.Nb(),i.Ob(15,\"textarea\",6),i.Vb(\"keyup\",function(){return e.gameChange()})(\"ngModelChange\",function(t){return e.bots=t}),i.Nb(),i.Nb(),i.Nb(),i.Nb(),i.Ob(16,\"div\",2),i.Ob(17,\"div\",3),i.Ob(18,\"mat-checkbox\",7),i.Vb(\"change\",function(){return e.gameChange()})(\"ngModelChange\",function(t){return e.hirelings=t}),i.sc(19,\" Hirelings? \"),i.Nb(),i.Nb(),i.Ob(20,\"mat-checkbox\",7),i.Vb(\"change\",function(){return e.gameChange()})(\"ngModelChange\",function(t){return e.balanced=t}),i.sc(21,\" Balanced Clearings? \"),i.Nb(),i.Nb(),i.Ob(22,\"div\",2),i.Ob(23,\"div\",3),i.Ob(24,\"button\",8),i.sc(25,\"Generate Map\"),i.Nb(),i.Nb(),i.Nb(),i.Nb()),2&t&&(i.ec(\"routerLink\",i.fc(10,y)),i.zb(9),i.ec(\"ngModel\",e.players)(\"ngModelOptions\",i.fc(11,C)),i.zb(6),i.ec(\"ngModel\",e.bots)(\"ngModelOptions\",i.fc(12,C)),i.zb(3),i.ec(\"ngModel\",e.hirelings),i.zb(2),i.ec(\"ngModel\",e.balanced),i.zb(4),i.ec(\"routerLink\",i.fc(13,R))(\"queryParams\",e.getURLParams())(\"disabled\",!e.validRootlog&&!e.validRootlogUrl))},directives:[S.a,o.c,M.b,M.e,O.a,w.b,w.h,w.j,j.a,_.a],styles:[\".container[_ngcontent-%COMP%]{padding:10px}.container[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin-left:20%;margin-right:20%}button[_ngcontent-%COMP%], mat-form-field[_ngcontent-%COMP%]{width:100%}.row[_ngcontent-%COMP%]{margin-top:20px}textarea[_ngcontent-%COMP%]{height:20px;max-height:20px}\"]}),t})()}];let N=(()=>{class t{}return t.\\u0275mod=i.Hb({type:t}),t.\\u0275inj=i.Gb({factory:function(e){return new(e||t)},imports:[[o.d.forChild(k)],o.d]}),t})();var I=r(\"d2mR\");let P=(()=>{class t{}return t.\\u0275mod=i.Hb({type:t}),t.\\u0275inj=i.Gb({factory:function(e){return new(e||t)},imports:[[n.c,w.d,N,I.a]]}),t})()}}]);","name":"2.05a76b5c75af61144b7f.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[2],{\n\n/***/ \"UYdf\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"InputModule\", function() { return /* binding */ input_module_InputModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js + 8 modules\nvar router = __webpack_require__(\"tyNb\");\n\n// EXTERNAL MODULE: ./node_modules/lz-string/libs/lz-string.js\nvar lz_string = __webpack_require__(\"6xEa\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/@seiyria/rootlog-parser/dist/index.js\nvar dist = __webpack_require__(\"UPMW\");\n\n// EXTERNAL MODULE: ./src/app/rootlog.static.ts\nvar rootlog_static = __webpack_require__(\"BJvs\");\n\n// EXTERNAL MODULE: ./src/app/rootlog.service.ts\nvar rootlog_service = __webpack_require__(\"HDMR\");\n\n// CONCATENATED MODULE: ./src/app/map.service.ts\n\r\n\r\n\r\n\r\nfunction choose(array, n) {\r\n    var shuffled = shuffle(array);\r\n    return shuffled.slice(0, n);\r\n}\r\nfunction out(output, str) {\r\n    output = output + str + '\\r\\n';\r\n    return output;\r\n}\r\nfunction shuffle(array) {\r\n    if (array == undefined)\r\n        console.trace();\r\n    return array.map(value => ({ value, sort: Math.random() }))\r\n        .sort((a, b) => a.sort - b.sort)\r\n        .map(({ value }) => value);\r\n}\r\nfunction space(start, len) {\r\n    return Array.from({ length: len }, (_, i) => i + start);\r\n}\r\nfunction boxMullerTransform() {\r\n    const u1 = Math.random();\r\n    const u2 = Math.random();\r\n    const z0 = Math.sqrt(-2.0 * Math.log(u1)) * Math.cos(2.0 * Math.PI * u2);\r\n    const z1 = Math.sqrt(-2.0 * Math.log(u1)) * Math.sin(2.0 * Math.PI * u2);\r\n    return { z0, z1 };\r\n}\r\nfunction getNormallyDistributedRandomNumber(mean, stddev) {\r\n    const { z0, z1 } = boxMullerTransform();\r\n    return z0 * stddev + mean;\r\n}\r\nfunction validLandmark(landmark, clearing, used, map) {\r\n    var clearingData = rootlog_static[\"l\" /* mapData */][map][clearing];\r\n    if (used.includes(clearing)) {\r\n        return false;\r\n    }\r\n    if (landmark != 't' && used.some(item => clearingData[\"adjacent\"].includes(item))) {\r\n        return false;\r\n    }\r\n    if (landmark == 't' && !(clearingData[\"ruins\"])) {\r\n        return false;\r\n    }\r\n    else if (landmark == \"t_m\" && !(clearingData[\"slots\"] == 1 && !clearingData[\"ruins\"]))\r\n        return false;\r\n    else if (landmark == \"t_c\" && !(clearingData[\"river\"]))\r\n        return false;\r\n    else if (landmark == \"t_f\" && !(clearingData[\"river\"]))\r\n        return false;\r\n    else if (landmark == \"t_r\" && !(!clearingData[\"edge\"] && clearingData[\"adjacent\"].length > 2)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction clone(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\nfunction validFactionPool(factionChoices, players) {\r\n    //adventurer,arbiter,harrier,ranger,ronin,scoundrel,thief,tinker,vagrant\r\n    var vagabondClasses = ['Ạ', 'Å', 'Ä', 'Ả', 'Ḁ', 'Ấ', 'Ầ', 'Ẩ', 'Ȃ'];\r\n    var fac = [];\r\n    var factions = clone(factionChoices);\r\n    for (var i = 0; i < Math.max(players + 1, 3); i++) {\r\n        var f = choose(factions, 1)[0];\r\n        fac.push(f);\r\n        factions.splice(factions.indexOf(f), 1);\r\n        if (f == 'V') {\r\n            factions.push('G');\r\n            var v = choose(vagabondClasses, 1)[0];\r\n            fac.push(v);\r\n            vagabondClasses.splice(vagabondClasses.indexOf(v), 1);\r\n        }\r\n        else if (f == 'G') {\r\n            var v = choose(vagabondClasses, 1)[0];\r\n            fac.push(v);\r\n            vagabondClasses.splice(vagabondClasses.indexOf(v), 1);\r\n        }\r\n    }\r\n    return fac;\r\n}\r\nfunction remove(array, element) {\r\n    if (array.includes(element))\r\n        array.splice(array.indexOf(element), 1);\r\n    return;\r\n}\r\nlet map_service_MapService = /*@__PURE__*/ (() => {\r\n    class MapService {\r\n        constructor(rootlogService) {\r\n            this.rootlogService = rootlogService;\r\n        }\r\n        mapSetup(players, bots, h, balanced) {\r\n            var output = '';\r\n            // randomly select map\r\n            var maps = [dist[\"RootMap\"].Fall, dist[\"RootMap\"].Winter, dist[\"RootMap\"].Lake, dist[\"RootMap\"].Mountain];\r\n            //var maps = [RootMap.Fall];\r\n            const map = choose(maps, 1)[0];\r\n            output = out(output, \"Map: \" + map);\r\n            // randomly select deck\r\n            var deck = Math.random() <= 0.9 ? 'E&P' : 'Standard';\r\n            output = out(output, \"Deck: \" + deck);\r\n            // randomly select suits\r\n            var suits = ['R', 'R', 'R', 'R', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M'];\r\n            suits = shuffle(suits);\r\n            var loop = true;\r\n            while (balanced && loop) {\r\n                suits = shuffle(suits);\r\n                loop = false;\r\n                for (var i = 0; i < suits.length; i++) {\r\n                    var nextDoor = rootlog_static[\"l\" /* mapData */][map][i + 1].adjacent;\r\n                    if (map == dist[\"RootMap\"].Mountain)\r\n                        nextDoor = nextDoor.concat(rootlog_static[\"l\" /* mapData */][map][i + 1].closedAdjacent);\r\n                    if (nextDoor.some(val => suits[val - 1] == suits[i])) {\r\n                        loop = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            var clearings = 'Clearings: ' + suits[0] + '1';\r\n            for (var i = 1; i < suits.length; i++)\r\n                clearings += ', ' + suits[i] + (i + 1).toString();\r\n            output = out(output, clearings);\r\n            var temp = '';\r\n            output = out(output, \"M: \" + deck + ' Deck');\r\n            // randomly select landmarks\r\n            //swrkfrmcbe is which prefexes you are allowed to use\r\n            // tower, marker, city, ferry, forge, treetop\r\n            var landmarks = [\"t\", \"t_m\", \"t_c\", \"t_f\", 't_k', 't_r'];\r\n            var maxLandmarks = 2;\r\n            var minLandmarks = 0;\r\n            var mean = (maxLandmarks + minLandmarks) / 2;\r\n            var numl = Math.round(Math.max(Math.min(getNormallyDistributedRandomNumber(mean + 0.1, mean * 0.557), maxLandmarks), minLandmarks));\r\n            var land = choose(landmarks, numl);\r\n            var r = Math.random();\r\n            if ((map == 'Mountain' && r < 0.4 && !land.includes('t')) || (map == 'Lake' && r < 0.4 && !land.includes('t_f')))\r\n                land[0] = map == 'Mountain' ? 't' : 't_f';\r\n            var found = false;\r\n            var landmarkClearings = [];\r\n            var loops1 = 0;\r\n            while (!found && loops1 <= 100000) {\r\n                landmarkClearings = [];\r\n                found = true;\r\n                land = shuffle(land);\r\n                var clears = choose(space(1, 12), land.length);\r\n                for (var i = 0; i < land.length; i++) {\r\n                    var clearing = clears[i];\r\n                    var r = Math.random();\r\n                    if (map == 'Mountain' && r < 0.2)\r\n                        clearing = 10;\r\n                    if (!validLandmark(land[i], clearing, landmarkClearings, map)) {\r\n                        found = false;\r\n                    }\r\n                    landmarkClearings.push(clearing);\r\n                }\r\n                loops1 += 1;\r\n            }\r\n            if (loops1 >= 100000) {\r\n                console.log(\"looped too much\");\r\n            }\r\n            //avaiable subnames for pieces are swrkfmcbe\r\n            var ruinClears = space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"ruins\"]);\r\n            var ruinItems = ['b', 'b_s', 'b_w', 'b_r'];\r\n            var str = 'M:';\r\n            if (ruinClears.length > 0) {\r\n                str += ruinItems[0] + '->' + ruinClears[0] + '/';\r\n                for (var i = 1; i < ruinClears.length; i++)\r\n                    str += ruinItems[i] + '->' + ruinClears[i] + '/';\r\n            }\r\n            if (land.length > 0) {\r\n                for (var i = 0; i < landmarkClearings.length; i++) {\r\n                    str += land[i] + '->' + landmarkClearings[i].toString() + '/';\r\n                    if (land[i] == 't_c')\r\n                        suits[landmarkClearings[i] - 1] = suits[landmarkClearings[i] - 1] + 'FRM'.replace(suits[landmarkClearings[i] - 1], '');\r\n                    else if (land[i] == 't_r') {\r\n                        rootlog_static[\"l\" /* mapData */][map][landmarkClearings[i]][\"slots\"] = rootlog_static[\"l\" /* mapData */][map][landmarkClearings[i]][\"slots\"] + 1;\r\n                    }\r\n                    else if (land[i] == 't_k') {\r\n                        if (suits[landmarkClearings[i] - 1].includes('F'))\r\n                            str += 'Z%s/Z%s/Z%x/Z%h/';\r\n                        if (suits[landmarkClearings[i] - 1].includes('R'))\r\n                            str += 'Z%b/Z%b/Z%t/Z%t/';\r\n                        if (suits[landmarkClearings[i] - 1].includes('M'))\r\n                            str += 'Z%f/Z%f/Z%c/Z%c/';\r\n                    }\r\n                }\r\n                str = str.slice(0, -1);\r\n                temp = out(temp, str);\r\n            }\r\n            // variables\r\n            var factions = ['P', 'L', 'D', 'E', 'C', 'O', 'V', 'A', 'K', 'H'];\r\n            var bot = ['c', 'e', 'a', 'v', 'p', 'd', 'o', 'l'];\r\n            var vagabondBotClasses = ['å', 'ả', 'ấ', 'ầ', 'ẩ', 'ȃ'];\r\n            // randomly select bots\r\n            var botsList = choose(bot, bots);\r\n            botsList.push('c');\r\n            for (var i = 0; i < botsList.length; i++) {\r\n                remove(factions, botsList[i].toUpperCase());\r\n                if (botsList[i] == 'v')\r\n                    botsList.splice(i + 1, 0, choose(vagabondBotClasses, 1)[0]);\r\n                var str = botsList[i] + \": \" + this.rootlogService.getFactionProperName(botsList[i]);\r\n                if (bot.includes(botsList[i]))\r\n                    str += ' (' + choose(rootlog_static[\"i\" /* factionTraits */][botsList[i].toUpperCase()], 1) + ')';\r\n                output = out(output, str);\r\n            }\r\n            //setup bots\r\n            var corners = space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"corner\"]);\r\n            var keep = 0;\r\n            if (botsList.includes('c')) {\r\n                var buildings = shuffle(['b_s', 'b_r', 'b_w']);\r\n                var corner = choose(corners, 1)[0];\r\n                corners.splice(corners.indexOf(corner), 1);\r\n                keep = corner;\r\n                var str = \"c:t_k->\" + corner.toString() + '/w->' + corner.toString();\r\n                for (var i = 1; i < 13; i++) {\r\n                    if (rootlog_static[\"l\" /* mapData */][map][corner][\"opposite\"] != i)\r\n                        str += '+' + i.toString();\r\n                }\r\n                var adjacent = rootlog_static[\"l\" /* mapData */][map][corner][\"adjacent\"];\r\n                if (adjacent.length < buildings.length)\r\n                    adjacent = adjacent.concat(Array(buildings.length - adjacent.length).fill(corner));\r\n                for (var i = 0; i < buildings.length; i++) {\r\n                    str += '/' + buildings[i] + '->' + adjacent[i].toString();\r\n                    rootlog_static[\"l\" /* mapData */][map][adjacent[i]][\"slots\"] = rootlog_static[\"l\" /* mapData */][map][adjacent[i]][\"slots\"] - 1;\r\n                }\r\n                temp = out(temp, str);\r\n            }\r\n            if (botsList.includes('e')) {\r\n                var corner = corners.length == 3 ? rootlog_static[\"l\" /* mapData */][map][space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"corner\"] && !corners.includes(val))[0]][\"opposite\"] : choose(corners, 1)[0];\r\n                corners.splice(corners.indexOf(corner), 1);\r\n                rootlog_static[\"l\" /* mapData */][map][corner][\"slots\"] = rootlog_static[\"l\" /* mapData */][map][corner][\"slots\"] - 1;\r\n                temp = out(temp, 'e:b+6w->' + corner.toString());\r\n            }\r\n            if (botsList.includes('v')) {\r\n                var size = Object.keys(rootlog_static[\"j\" /* forestPositions */][map]).reduce((r, s) => r > (s.match(/\\_/g) || []).length ? r : (s.match(/\\_/g) || []).length, 0);\r\n                var largestForests = Object.keys(rootlog_static[\"j\" /* forestPositions */][map]).filter(pl => (pl.match(/\\_/g) || []).length == size);\r\n                temp = out(temp, 'v:p->' + choose(largestForests, 1)[0].toString());\r\n            }\r\n            if (botsList.includes('l')) {\r\n                var corner = corners.length == 3 ? rootlog_static[\"l\" /* mapData */][map][space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"corner\"] && !corners.includes(val))[0]][\"opposite\"] : choose(corners, 1)[0];\r\n                corners.splice(corners.indexOf(corner), 1);\r\n                var str = 'l:4w+b_' + (suits[corner - 1].toString()[0].toLowerCase()) + '->' + corner.toString();\r\n                for (var i = 0; i < rootlog_static[\"l\" /* mapData */][map][corner][\"adjacent\"].length; i++)\r\n                    str += '/w->' + rootlog_static[\"l\" /* mapData */][map][corner][\"adjacent\"][i].toString();\r\n                rootlog_static[\"l\" /* mapData */][map][corner][\"slots\"] = rootlog_static[\"l\" /* mapData */][map][corner][\"slots\"] - 1;\r\n                temp = out(temp, str);\r\n            }\r\n            if (botsList.includes('o')) {\r\n                var cleas = space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"river\"] && val != keep);\r\n                var str = 'o:w->' + cleas[0];\r\n                for (var i = 1; i < cleas.length; i++)\r\n                    str += '+' + cleas[i];\r\n                temp = out(temp, str);\r\n            }\r\n            if (botsList.includes('d')) {\r\n                var corner = corners.length == 3 ? rootlog_static[\"l\" /* mapData */][map][space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"corner\"] && !corners.includes(val))[0]][\"opposite\"] : choose(corners, 1)[0];\r\n                corners.splice(corners.indexOf(corner), 1);\r\n                var str = 'd:t->' + corner.toString() + '/2w->' + corner.toString();\r\n                for (var i = 0; i < rootlog_static[\"l\" /* mapData */][map][corner][\"adjacent\"].length; i++)\r\n                    str += '+' + rootlog_static[\"l\" /* mapData */][map][corner][\"adjacent\"][i].toString();\r\n                temp = out(temp, str);\r\n            }\r\n            if (botsList.includes('p')) {\r\n                var str = 'p:w->';\r\n                str += space(1, 12).filter(val => suits[val - 1].includes('F') && val != keep).splice(-1)[0] + '+';\r\n                str += space(1, 12).filter(val => suits[val - 1].includes('M') && val != keep).splice(-1)[0] + '+';\r\n                str += space(1, 12).filter(val => suits[val - 1].includes('R') && val != keep).splice(-1)[0];\r\n                temp = out(temp, str);\r\n            }\r\n            // randomly select hirelings\r\n            // band, bandits, dynasty, exile, expedition, flamebearers, flotilla, patrol, prophets, protector, spies, uprising, vaultkeepers\r\n            var noneTypeHirelings = ['B', 'N', 'R'];\r\n            var hirelings = choose(factions.concat(noneTypeHirelings), (h ? 3 : 0));\r\n            hirelings[0] = 'K';\r\n            for (var i = 0; i < hirelings.length; i++) {\r\n                var hire = hirelings[i];\r\n                if (factions.includes(hire) && (factions.length - (hire == 'V' ? 2 : 1)) < players + 1)\r\n                    hire = choose(['B', 'N', 'R'].filter(val => !hirelings.includes(val) && !hirelings.includes(val + '\\u0301')), 1)[0];\r\n                remove(factions, hire);\r\n                hirelings[i] = Object(rootlog_static[\"c\" /* change */])(hire);\r\n                output = out(output, hirelings[i] + \": \" + this.rootlogService.getFactionProperName(hirelings[i]).split(',')[i + players + bots > 4 ? 1 : 0] + ' ' + (i + players + bots > 4 ? '▼' : '▲'));\r\n            }\r\n            // setup hirelings\r\n            for (var i = 0; i < hirelings.length && i < 5 - players - bots; i++) {\r\n                var hireling = hirelings[i];\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('K')) {\r\n                    var clear = choose(space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"slots\"] > 0 && val != keep), 1)[0];\r\n                    temp = out(temp, Object(rootlog_static[\"c\" /* change */])('K') + ':b+2w->' + clear.toString());\r\n                    rootlog_static[\"l\" /* mapData */][map][clear][\"slots\"] = rootlog_static[\"l\" /* mapData */][map][clear][\"slots\"] - 1;\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('B')) {\r\n                    //var clears = choose(space(1,12).filter(val => val!=keep),2);\r\n                    var clears = choose(space(1, 12).filter(val => val != keep), 2);\r\n                    temp = out(temp, Object(rootlog_static[\"c\" /* change */])('B') + ':w->' + clears[0].toString() + '+' + clears[1].toString());\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('N')) {\r\n                    var clears = choose(Object.keys(rootlog_static[\"m\" /* pathPositions */][map]), 2);\r\n                    //var clears=choose(Object.keys(pathPositions[map]),Object.keys(pathPositions[map]).length);\r\n                    var str = '';\r\n                    if (clears.length > 0) {\r\n                        str += Object(rootlog_static[\"c\" /* change */])('N') + ':w->' + clears[0];\r\n                        for (var j = 1; j < clears.length; j++)\r\n                            str += '+' + clears[j];\r\n                    }\r\n                    temp = out(temp, str);\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('P')) {\r\n                    var suit = choose(['R', 'F', 'M'], 1)[0];\r\n                    var clears = choose(space(1, 12).filter(val => suits[val - 1].includes(suit) && val != keep), 2);\r\n                    temp = out(temp, Object(rootlog_static[\"c\" /* change */])('P') + ':w->' + clears[0].toString() + '+' + clears[1].toString());\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('L')) {\r\n                    var cleas = space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"ruins\"] && val != keep);\r\n                    var str = '';\r\n                    if (cleas.length > 0)\r\n                        str += Object(rootlog_static[\"c\" /* change */])('L') + ':w->' + cleas[0];\r\n                    for (var j = 1; j < cleas.length; j++)\r\n                        str += '+' + cleas[j];\r\n                    temp = out(temp, str);\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('D')) {\r\n                    var clear = choose(space(1, 12).filter(val => val != keep), 1)[0];\r\n                    temp = out(temp, Object(rootlog_static[\"c\" /* change */])('D') + ':t+3w->' + clear.toString());\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('E')) {\r\n                    var clear = choose(space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"edge\"] && val != keep), 1)[0];\r\n                    temp = out(temp, Object(rootlog_static[\"c\" /* change */])('E') + ':5w->' + clear.toString());\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('C')) {\r\n                    var cleas = space(1, 12).filter(val => val != keep);\r\n                    var str = '';\r\n                    if (cleas.length > 0) {\r\n                        str += Object(rootlog_static[\"c\" /* change */])('C') + ':w->' + cleas[0];\r\n                        for (var j = 1; j < cleas.length; j++)\r\n                            str += '+' + cleas[j];\r\n                    }\r\n                    temp = out(temp, str);\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('R')) {\r\n                    var clear = choose(space(1, 12).filter(val => val != keep), 1)[0];\r\n                    temp = out(temp, Object(rootlog_static[\"c\" /* change */])('R') + ':w->' + clear.toString());\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('H')) {\r\n                    var clear1 = choose(space(1, 12).filter(val => val != keep), 1)[0];\r\n                    var clear2 = choose(space(1, 12).filter(val => val != keep), 1)[0];\r\n                    temp = out(temp, Object(rootlog_static[\"c\" /* change */])('H') + ':w->' + clear1.toString() + '+' + clear2.toString());\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('O')) {\r\n                    var clears = choose(space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"edge\"] && rootlog_static[\"l\" /* mapData */][map][val][\"river\"] && val != keep), 1);\r\n                    if (clears.length == 0)\r\n                        clears = choose(space(1, 12).filter(val => rootlog_static[\"l\" /* mapData */][map][val][\"river\"] && val != keep), 1);\r\n                    var clear = clears[0];\r\n                    temp = out(temp, Object(rootlog_static[\"c\" /* change */])('O') + ':w->' + clear.toString());\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('V')) {\r\n                    var clear = choose(Object.keys(rootlog_static[\"j\" /* forestPositions */][map]), 1)[0];\r\n                    temp = out(temp, Object(rootlog_static[\"c\" /* change */])('V') + ':w->' + clear.toString());\r\n                }\r\n                if (hireling == Object(rootlog_static[\"c\" /* change */])('A')) {\r\n                    var suit1 = choose(['R', 'F', 'M'], 1)[0];\r\n                    var suit2 = choose(['R', 'F', 'M'], 1)[0];\r\n                    var clear1 = choose(space(1, 12).filter(val => suits[val - 1].includes(suit1) && val != keep), 1)[0];\r\n                    var clear2 = choose(space(1, 12).filter(val => suits[val - 1].includes(suit2) && val != keep), 1)[0];\r\n                    temp = out(temp, Object(rootlog_static[\"c\" /* change */])('A') + ':w->' + clear1.toString() + '+' + clear2.toString());\r\n                }\r\n            }\r\n            // randomly select factions\r\n            var militant = ['D', 'E', 'C', 'K', 'H'];\r\n            var valid = false;\r\n            var loops2 = 0;\r\n            var pool = militant;\r\n            while (!valid && loops2 <= 100000) {\r\n                valid = true;\r\n                pool = validFactionPool(factions, players);\r\n                var totalMilitant = (militant.filter(value => pool.includes(value) || botsList.includes(value.toLowerCase()))).length;\r\n                if (totalMilitant < 1 || (players == 2 && totalMilitant < 3))\r\n                    valid = false;\r\n                loops2 += 1;\r\n            }\r\n            if (loops2 >= 100000)\r\n                console.log('looped too much');\r\n            var totalMilitant = (militant.filter(value => pool.includes(value) || botsList.includes(value.toLowerCase()))).length;\r\n            for (var i = 0; i < pool.length; i++) {\r\n                var str = pool[i] + \": \" + this.rootlogService.getFactionProperName(pool[i]);\r\n                if ((i == pool.length - 1 && totalMilitant <= 1 && !militant.includes(pool[i]) && !['Ạ', 'Å', 'Ä', 'Ả', 'Ḁ', 'Ấ', 'Ầ', 'Ẩ', 'Ȃ'].includes(pool[i]))\r\n                    || (i == pool.length - 2 && totalMilitant <= 1 && (pool[i] == 'V' || pool[i] == 'G')))\r\n                    str += ' 🔒';\r\n                if (pool[i] == 'K') {\r\n                    var relics = ['t', 't', 't', 't', 't_k', 't_k', 't_k', 't_k', 't_m', 't_m', 't_m', 't_m'];\r\n                    var forests = Object.keys(rootlog_static[\"j\" /* forestPositions */][map]);\r\n                    var clears = choose(relics, forests.length);\r\n                    var st = '';\r\n                    if (clears.length > 0) {\r\n                        st += 'K:' + clears[0] + '->' + forests[0];\r\n                        for (var j = 1; j < clears.length; j++)\r\n                            st += '/' + clears[j] + '->' + forests[j];\r\n                    }\r\n                    temp = out(temp, st);\r\n                }\r\n                output = out(output, str);\r\n            }\r\n            output += temp;\r\n            if (loops1 >= 100000 || loops2 >= 100000)\r\n                output = 'error';\r\n            output = 'Map: Winter\\r\\n\\r\\nDeck: Standard\\r\\n\\r\\nClearings: F1, M2, M3, M4, F5, R6, F7, R8, F9, R10, M11, R12\\r\\n\\r\\nM: Standard Deck\\r\\n\\r\\nc: Mechanical Marquise 2.0 (Iron will)\\r\\n\\r\\nē: Vault Keepers ▲\\r\\n\\r\\nė: Riverfolk Flotilla ▲\\r\\n\\r\\nĐ: Flame Bearers ▲\\r\\n\\r\\nP: Corvid Conspiracy\\r\\n\\r\\nD: Underground Duchy\\r\\n\\r\\nV: Vagabond\\r\\n\\r\\nẢ: Ranger\\r\\n\\r\\nM:b->8/b_s->9/b_w->11/b_r->12/t_f->7/t_c->12\\r\\n\\r\\nc:t_k->2/w->2+1+2+3+5+6+7+8+9+10+11+12/b_r->6/b_s->7/b_w->12\\r\\n\\r\\nē:b+2w->12\\r\\n\\r\\nė:w->10\\r\\n\\r\\nĐ:w->1+4\\r\\n';\r\n            console.log(output);\r\n            return output;\r\n        }\r\n    }\r\n    MapService.ɵfac = function MapService_Factory(t) { return new (t || MapService)(core[\"Sb\" /* ɵɵinject */](rootlog_service[\"a\" /* RootlogService */])); };\r\n    MapService.ɵprov = core[\"Fb\" /* ɵɵdefineInjectable */]({ token: MapService, factory: MapService.ɵfac, providedIn: 'root' });\r\n    return MapService;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/local-storage.service.ts\n\r\nlet local_storage_service_LocalStorageService = /*@__PURE__*/ (() => {\r\n    class LocalStorageService {\r\n        constructor() { }\r\n        setItem(key, value) {\r\n            localStorage.setItem(key, value);\r\n        }\r\n        getItem(key) {\r\n            return localStorage.getItem(key);\r\n        }\r\n        removeItem(key) {\r\n            localStorage.removeItem(key);\r\n        }\r\n        clear() {\r\n            localStorage.clear();\r\n        }\r\n    }\r\n    LocalStorageService.ɵfac = function LocalStorageService_Factory(t) { return new (t || LocalStorageService)(); };\r\n    LocalStorageService.ɵprov = core[\"Fb\" /* ɵɵdefineInjectable */]({ token: LocalStorageService, factory: LocalStorageService.ɵfac, providedIn: 'root' });\r\n    return LocalStorageService;\r\n})();\r\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js\nvar toolbar = __webpack_require__(\"/t3+\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js\nvar form_field = __webpack_require__(\"kmnG\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js + 1 modules\nvar input = __webpack_require__(\"qFsG\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js\nvar fesm2015_forms = __webpack_require__(\"3Pt+\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js\nvar fesm2015_checkbox = __webpack_require__(\"bSwM\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js\nvar fesm2015_button = __webpack_require__(\"bTqV\");\n\n// CONCATENATED MODULE: ./src/app/pages/input/input.component.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst _c0 = function () { return [\"/\"]; };\r\nconst _c1 = function () { return { standalone: true }; };\r\nconst _c2 = function () { return [\"/full-game\"]; };\r\nlet input_component_InputComponent = /*@__PURE__*/ (() => {\r\n    class InputComponent {\r\n        constructor(mapService, rootlogService, localStorageService) {\r\n            this.mapService = mapService;\r\n            this.rootlogService = rootlogService;\r\n            this.localStorageService = localStorageService;\r\n            this.players = this.localStorageService.getItem('players') == null ? '4' : this.localStorageService.getItem('players');\r\n            this.bots = this.localStorageService.getItem('bots') == null ? '0' : this.localStorageService.getItem('bots');\r\n            this.hirelings = this.localStorageService.getItem('hirelings') == null ? false : JSON.parse(this.localStorageService.getItem('hirelings').toLowerCase());\r\n            this.balanced = this.localStorageService.getItem('balanced') == null ? false : JSON.parse(this.localStorageService.getItem('balanced').toLowerCase());\r\n            this.game = this.mapService.mapSetup(parseInt(this.players), parseInt(this.bots), this.hirelings, this.balanced);\r\n            this.validRootlog = true;\r\n            this.gameUrl = '';\r\n            this.validRootlogUrl = false;\r\n        }\r\n        gameChange() {\r\n            this.localStorageService.setItem('players', this.players);\r\n            this.localStorageService.setItem('bots', this.bots);\r\n            this.localStorageService.setItem('hirelings', this.hirelings);\r\n            this.localStorageService.setItem('balanced', this.balanced);\r\n            this.game = this.mapService.mapSetup(parseInt(this.players), parseInt(this.bots), this.hirelings, this.balanced);\r\n        }\r\n        async gameUrlChange() {\r\n            try {\r\n                const game = await this.rootlogService.getGameStringFromURLPromise(this.gameUrl);\r\n                this.validRootlogUrl = this.rootlogService.isValidGame(game);\r\n            }\r\n            catch (_a) {\r\n                this.validRootlogUrl = false;\r\n            }\r\n        }\r\n        getURLParams() {\r\n            const base = {};\r\n            if (this.game) {\r\n                base.game = this.getEncodedGame();\r\n            }\r\n            if (this.gameUrl) {\r\n                base.gameUrl = this.gameUrl;\r\n            }\r\n            return base;\r\n        }\r\n        getEncodedGame() {\r\n            if (!this.game) {\r\n                return '';\r\n            }\r\n            return Object(lz_string[\"compressToEncodedURIComponent\"])(this.game);\r\n        }\r\n    }\r\n    InputComponent.ɵfac = function InputComponent_Factory(t) { return new (t || InputComponent)(core[\"Jb\" /* ɵɵdirectiveInject */](map_service_MapService), core[\"Jb\" /* ɵɵdirectiveInject */](rootlog_service[\"a\" /* RootlogService */]), core[\"Jb\" /* ɵɵdirectiveInject */](local_storage_service_LocalStorageService)); };\r\n    InputComponent.ɵcmp = core[\"Db\" /* ɵɵdefineComponent */]({ type: InputComponent, selectors: [[\"app-input\"]], decls: 26, vars: 14, consts: [[\"color\", \"primary\", 3, \"routerLink\"], [1, \"container\"], [1, \"row\"], [1, \"col\"], [\"appearance\", \"outline\", \"color\", \"accent\"], [\"matInput\", \"\", \"placeholder\", \"Enter # of players here...\", 1, \"input-game\", 3, \"ngModel\", \"ngModelOptions\", \"keyup\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Enter # of bots here...\", 1, \"input-game\", 3, \"ngModel\", \"ngModelOptions\", \"keyup\", \"ngModelChange\"], [3, \"ngModel\", \"change\", \"ngModelChange\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"routerLink\", \"queryParams\", \"disabled\"]], template: function InputComponent_Template(rf, ctx) {\r\n            if (rf & 1) {\r\n                core[\"Ob\" /* ɵɵelementStart */](0, \"mat-toolbar\", 0);\r\n                core[\"Ob\" /* ɵɵelementStart */](1, \"span\");\r\n                core[\"sc\" /* ɵɵtext */](2, \"Rootvis\");\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Ob\" /* ɵɵelementStart */](3, \"div\", 1);\r\n                core[\"Ob\" /* ɵɵelementStart */](4, \"div\", 2);\r\n                core[\"Ob\" /* ɵɵelementStart */](5, \"div\", 3);\r\n                core[\"Ob\" /* ɵɵelementStart */](6, \"mat-form-field\", 4);\r\n                core[\"Ob\" /* ɵɵelementStart */](7, \"mat-label\");\r\n                core[\"sc\" /* ɵɵtext */](8, \"Players\");\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Ob\" /* ɵɵelementStart */](9, \"textarea\", 5);\r\n                core[\"Vb\" /* ɵɵlistener */](\"keyup\", function InputComponent_Template_textarea_keyup_9_listener() { return ctx.gameChange(); })(\"ngModelChange\", function InputComponent_Template_textarea_ngModelChange_9_listener($event) { return ctx.players = $event; });\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Ob\" /* ɵɵelementStart */](10, \"div\", 2);\r\n                core[\"Ob\" /* ɵɵelementStart */](11, \"div\", 3);\r\n                core[\"Ob\" /* ɵɵelementStart */](12, \"mat-form-field\", 4);\r\n                core[\"Ob\" /* ɵɵelementStart */](13, \"mat-label\");\r\n                core[\"sc\" /* ɵɵtext */](14, \"Bots\");\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Ob\" /* ɵɵelementStart */](15, \"textarea\", 6);\r\n                core[\"Vb\" /* ɵɵlistener */](\"keyup\", function InputComponent_Template_textarea_keyup_15_listener() { return ctx.gameChange(); })(\"ngModelChange\", function InputComponent_Template_textarea_ngModelChange_15_listener($event) { return ctx.bots = $event; });\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Ob\" /* ɵɵelementStart */](16, \"div\", 2);\r\n                core[\"Ob\" /* ɵɵelementStart */](17, \"div\", 3);\r\n                core[\"Ob\" /* ɵɵelementStart */](18, \"mat-checkbox\", 7);\r\n                core[\"Vb\" /* ɵɵlistener */](\"change\", function InputComponent_Template_mat_checkbox_change_18_listener() { return ctx.gameChange(); })(\"ngModelChange\", function InputComponent_Template_mat_checkbox_ngModelChange_18_listener($event) { return ctx.hirelings = $event; });\r\n                core[\"sc\" /* ɵɵtext */](19, \" Hirelings? \");\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Ob\" /* ɵɵelementStart */](20, \"mat-checkbox\", 7);\r\n                core[\"Vb\" /* ɵɵlistener */](\"change\", function InputComponent_Template_mat_checkbox_change_20_listener() { return ctx.gameChange(); })(\"ngModelChange\", function InputComponent_Template_mat_checkbox_ngModelChange_20_listener($event) { return ctx.balanced = $event; });\r\n                core[\"sc\" /* ɵɵtext */](21, \" Balanced Clearings? \");\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Ob\" /* ɵɵelementStart */](22, \"div\", 2);\r\n                core[\"Ob\" /* ɵɵelementStart */](23, \"div\", 3);\r\n                core[\"Ob\" /* ɵɵelementStart */](24, \"button\", 8);\r\n                core[\"sc\" /* ɵɵtext */](25, \"Generate Map\");\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n                core[\"Nb\" /* ɵɵelementEnd */]();\r\n            }\r\n            if (rf & 2) {\r\n                core[\"ec\" /* ɵɵproperty */](\"routerLink\", core[\"fc\" /* ɵɵpureFunction0 */](10, _c0));\r\n                core[\"zb\" /* ɵɵadvance */](9);\r\n                core[\"ec\" /* ɵɵproperty */](\"ngModel\", ctx.players)(\"ngModelOptions\", core[\"fc\" /* ɵɵpureFunction0 */](11, _c1));\r\n                core[\"zb\" /* ɵɵadvance */](6);\r\n                core[\"ec\" /* ɵɵproperty */](\"ngModel\", ctx.bots)(\"ngModelOptions\", core[\"fc\" /* ɵɵpureFunction0 */](12, _c1));\r\n                core[\"zb\" /* ɵɵadvance */](3);\r\n                core[\"ec\" /* ɵɵproperty */](\"ngModel\", ctx.hirelings);\r\n                core[\"zb\" /* ɵɵadvance */](2);\r\n                core[\"ec\" /* ɵɵproperty */](\"ngModel\", ctx.balanced);\r\n                core[\"zb\" /* ɵɵadvance */](4);\r\n                core[\"ec\" /* ɵɵproperty */](\"routerLink\", core[\"fc\" /* ɵɵpureFunction0 */](13, _c2))(\"queryParams\", ctx.getURLParams())(\"disabled\", !ctx.validRootlog && !ctx.validRootlogUrl);\r\n            }\r\n        }, directives: [toolbar[\"a\" /* MatToolbar */], router[\"c\" /* RouterLink */], form_field[\"b\" /* MatFormField */], form_field[\"e\" /* MatLabel */], input[\"a\" /* MatInput */], fesm2015_forms[\"b\" /* DefaultValueAccessor */], fesm2015_forms[\"h\" /* NgControlStatus */], fesm2015_forms[\"j\" /* NgModel */], fesm2015_checkbox[\"a\" /* MatCheckbox */], fesm2015_button[\"a\" /* MatButton */]], styles: [\".container[_ngcontent-%COMP%]{padding:10px}.container[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin-left:20%;margin-right:20%}button[_ngcontent-%COMP%], mat-form-field[_ngcontent-%COMP%]{width:100%}.row[_ngcontent-%COMP%]{margin-top:20px}textarea[_ngcontent-%COMP%]{height:20px;max-height:20px}\"] });\r\n    return InputComponent;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/pages/input/input-routing.module.ts\n\r\n\r\n\r\n\r\nconst routes = [{ path: '', component: input_component_InputComponent }];\r\nlet input_routing_module_InputRoutingModule = /*@__PURE__*/ (() => {\r\n    class InputRoutingModule {\r\n    }\r\n    InputRoutingModule.ɵmod = core[\"Hb\" /* ɵɵdefineNgModule */]({ type: InputRoutingModule });\r\n    InputRoutingModule.ɵinj = core[\"Gb\" /* ɵɵdefineInjector */]({ factory: function InputRoutingModule_Factory(t) { return new (t || InputRoutingModule)(); }, imports: [[router[\"d\" /* RouterModule */].forChild(routes)], router[\"d\" /* RouterModule */]] });\r\n    return InputRoutingModule;\r\n})();\r\n\n// EXTERNAL MODULE: ./src/app/shared.module.ts + 27 modules\nvar shared_module = __webpack_require__(\"d2mR\");\n\n// CONCATENATED MODULE: ./src/app/pages/input/input.module.ts\n\r\n\r\n\r\n\r\n\r\nlet input_module_InputModule = /*@__PURE__*/ (() => {\r\n    class InputModule {\r\n    }\r\n    InputModule.ɵmod = core[\"Hb\" /* ɵɵdefineNgModule */]({ type: InputModule });\r\n    InputModule.ɵinj = core[\"Gb\" /* ɵɵdefineInjector */]({ factory: function InputModule_Factory(t) { return new (t || InputModule)(); }, imports: [[\r\n                common[\"c\" /* CommonModule */],\r\n                fesm2015_forms[\"d\" /* FormsModule */],\r\n                input_routing_module_InputRoutingModule,\r\n                shared_module[\"a\" /* SharedModule */],\r\n            ]] });\r\n    return InputModule;\r\n})();\r\n\n\n/***/ })\n\n}]);","inputSourceMap":null}